;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 23/06/2017 15:16:31
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2830      	GOTO       48
_interrupt:
;FirePIC_PiTranslator.c,27 :: 		void interrupt(){
;FirePIC_PiTranslator.c,30 :: 		MOVLB       0
0x0004	0x3180      	MOVLP      0
0x0005	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,31 :: 		BTFSC       PIR1, RCIF                                            // Ignore interrupt unless it was Rx.
0x0006	0x1A91      	BTFSC      PIR1, 5
;FirePIC_PiTranslator.c,32 :: 		GOTO        SEND_DATA
0x0007	0x2812      	GOTO       SEND_DATA
;FirePIC_PiTranslator.c,33 :: 		RETFIE                                                            // Return from interrupt.
0x0008	0x0009      	RETFIE     0
;FirePIC_PiTranslator.c,38 :: 		RESET_9BIT_COUNTER:
RESET_9BIT_COUNTER:
;FirePIC_PiTranslator.c,39 :: 		MOVLB      0
0x0009	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,40 :: 		MOVLW      2
0x000A	0x3002      	MOVLW      2
;FirePIC_PiTranslator.c,41 :: 		MOVWF      _counter                                               // Set Counter to 2.
0x000B	0x00A1      	MOVWF      _counter
;FirePIC_PiTranslator.c,42 :: 		RETFIE                                                            // Leave interrupt here, only called on start message indicator so don't send.
0x000C	0x0009      	RETFIE     0
;FirePIC_PiTranslator.c,46 :: 		TURN_ON_BIT_9:
TURN_ON_BIT_9:
;FirePIC_PiTranslator.c,47 :: 		MOVLB     3
0x000D	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,48 :: 		BSF       TXSTA, TX9D                                             // Turn the 9th bit ON.
0x000E	0x141E      	BSF        TXSTA, 0
;FirePIC_PiTranslator.c,49 :: 		MOVLB     0
0x000F	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,50 :: 		DECF      _counter, 1                                             // Decrement the counter.
0x0010	0x03A1      	DECF       _counter, 1
;FirePIC_PiTranslator.c,51 :: 		RETURN                                                            // Return to send byte.
0x0011	0x0008      	RETURN
;FirePIC_PiTranslator.c,56 :: 		SEND_DATA:
SEND_DATA:
;FirePIC_PiTranslator.c,58 :: 		MOVLB       0
0x0012	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,59 :: 		BCF         PIR1, RCIF
0x0013	0x1291      	BCF        PIR1, 5
;FirePIC_PiTranslator.c,62 :: 		MOVLB      3
0x0014	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,63 :: 		MOVF       RCREG, 0
0x0015	0x0819      	MOVF       RCREG, 0
;FirePIC_PiTranslator.c,64 :: 		MOVLB      0
0x0016	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,65 :: 		MOVWF      _receivedByte                                             // Store into receivedByte for testing agains 0xF0 in W.
0x0017	0x00A0      	MOVWF      _receivedByte
;FirePIC_PiTranslator.c,68 :: 		SUBLW      NEW_MESSAGE_FLAG                                          // Subtract from 0xFF
0x0018	0x3CF0      	SUBLW      240
;FirePIC_PiTranslator.c,69 :: 		BTFSC      STATUS, Z                                                 // If the result of that was not 0 (ie. it was the start indicator)...
0x0019	0x1903      	BTFSC      STATUS, 2
;FirePIC_PiTranslator.c,70 :: 		GOTO       RESET_9BIT_COUNTER                                        //        Set the counter to 2 for 9th bit setting, then exit ISR.
0x001A	0x2809      	GOTO       RESET_9BIT_COUNTER
;FirePIC_PiTranslator.c,73 :: 		MOVLB       3
0x001B	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,74 :: 		BCF         TXSTA, TX9D                                              // Always clear by default.
0x001C	0x101E      	BCF        TXSTA, 0
;FirePIC_PiTranslator.c,75 :: 		MOVLB       0
0x001D	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,76 :: 		MOVF       _counter,0                                                // Load the counter to check if it was empty (inside STATUS.Z)
0x001E	0x0821      	MOVF       _counter, 0
;FirePIC_PiTranslator.c,77 :: 		BTFSS      STATUS, Z                                                 // If the counter == 0:
0x001F	0x1D03      	BTFSS      STATUS, 2
;FirePIC_PiTranslator.c,78 :: 		CALL       TURN_ON_BIT_9                                                 // Turn on the 9th bit and return back.
0x0020	0x200D      	CALL       TURN_ON_BIT_9
;FirePIC_PiTranslator.c,81 :: 		MOVLB       0
0x0021	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,82 :: 		MOVF        _receivedByte, 0                                         // Load back the untouched _receivedByte.
0x0022	0x0820      	MOVF       _receivedByte, 0
;FirePIC_PiTranslator.c,83 :: 		MOVLB       3
0x0023	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,84 :: 		MOVWF       TXREG                                                    // Send received data.
0x0024	0x009A      	MOVWF      TXREG
;FirePIC_PiTranslator.c,87 :: 		RETFIE
0x0025	0x0009      	RETFIE     0
;FirePIC_PiTranslator.c,89 :: 		}
L_end_interrupt:
L__interrupt7:
0x0026	0x0009      	RETFIE     %s
; end of _interrupt
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x0027	0x0012      	MOVIW      FSR0++ 
;__Lib_System.c,75 :: 		
0x0028	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x0029	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x002A	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x002B	0x2827      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x002C	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x002D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x002E	0x2827      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x002F	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0030	0x0020      	MOVLB      0
0x0031	0x01A0      	CLRF       _receivedByte
0x0032	0x01A1      	CLRF       _counter
;FirePIC_PiTranslator.c,98 :: 		void main(){
;FirePIC_PiTranslator.c,101 :: 		MOVLB      1
0x0033	0x0021      	MOVLB      1
;FirePIC_PiTranslator.c,102 :: 		MOVLW      0xFC                                                     // (0xFC = 1111 1100)
0x0034	0x30FC      	MOVLW      252
;FirePIC_PiTranslator.c,104 :: 		MOVWF      TRISA                                                    // Set input{RA5, RA4, RA3}, output{RA0, RA1} (Tx pin needs to be set as input).
0x0035	0x008C      	MOVWF      TRISA
;FirePIC_PiTranslator.c,105 :: 		MOVLB      0
0x0036	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,106 :: 		CLRF       PORTA                                                    // Clear the port.
0x0037	0x018C      	CLRF       PORTA
;FirePIC_PiTranslator.c,109 :: 		MOVLB        1
0x0038	0x0021      	MOVLB      1
;FirePIC_PiTranslator.c,110 :: 		MOVLW        0xF0                                                   // Configure for 32MHz operation (0x7A for 16MHz)
0x0039	0x30F0      	MOVLW      240
;FirePIC_PiTranslator.c,111 :: 		MOVWF        OSCCON
0x003A	0x0099      	MOVWF      OSCCON
;FirePIC_PiTranslator.c,114 :: 		MOVLB        3                                                      // Disable AtoD functionality on all pins.
0x003B	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,115 :: 		CLRF         ANSELA
0x003C	0x018C      	CLRF       ANSELA
;FirePIC_PiTranslator.c,118 :: 		MOVLB        2                                                      // Configure USART pinout
0x003D	0x0022      	MOVLB      2
;FirePIC_PiTranslator.c,119 :: 		MOVLW        0x84                                                   // RX = RA5
0x003E	0x3084      	MOVLW      132
;FirePIC_PiTranslator.c,120 :: 		MOVWF        APFCON                                                 // TX = RA4
0x003F	0x009D      	MOVWF      APFCON
;FirePIC_PiTranslator.c,123 :: 		MOVLB        3                                                      // 1Mbps: SPBRGH = 0  @ 16MHz, SPBRGL = 1  @ 16MHz
0x0040	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,124 :: 		CLRF         SPBRGH                                                 // 2Mbps: SPBRGH = 0 @ 16MHz,  SPBRGL = 0  @ 16MHz
0x0041	0x019C      	CLRF       SPBRGH
;FirePIC_PiTranslator.c,125 :: 		MOVLB        3
0x0042	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,126 :: 		MOVLW        1
0x0043	0x3001      	MOVLW      1
;FirePIC_PiTranslator.c,127 :: 		MOVWF        SPBRGL
0x0044	0x009B      	MOVWF      SPBRGL
;FirePIC_PiTranslator.c,129 :: 		MOVLB        3                                                      // BRG16
0x0045	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,130 :: 		MOVLW        0x04                                                   // bit 3 = 1. (BRG16)
0x0046	0x3004      	MOVLW      4
;FirePIC_PiTranslator.c,131 :: 		MOVWF        BAUDCON
0x0047	0x009F      	MOVWF      BAUDCON
;FirePIC_PiTranslator.c,134 :: 		MOVLB        3                                                      // Enable Asynschronous USART Tx
0x0048	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,135 :: 		MOVLW        0x64                                                   // With 9 bit mode by Default...
0x0049	0x3064      	MOVLW      100
;FirePIC_PiTranslator.c,136 :: 		MOVWF        TXSTA                                                  // SYNC = 0 & BRGH = 1
0x004A	0x009E      	MOVWF      TXSTA
;FirePIC_PiTranslator.c,138 :: 		MOVLB        3                                                      // Enable Asynschronous USART Rx
0x004B	0x0023      	MOVLB      3
;FirePIC_PiTranslator.c,139 :: 		MOVLW        0x90                                                   // With 8 bit mode, (RX9 = 0)
0x004C	0x3090      	MOVLW      144
;FirePIC_PiTranslator.c,140 :: 		MOVWF        RCSTA
0x004D	0x009D      	MOVWF      RCSTA
;FirePIC_PiTranslator.c,143 :: 		MOVLB      0
0x004E	0x0020      	MOVLB      0
;FirePIC_PiTranslator.c,144 :: 		CLRF       _counter
0x004F	0x01A1      	CLRF       _counter
;FirePIC_PiTranslator.c,147 :: 		MOVLB        1
0x0050	0x0021      	MOVLB      1
;FirePIC_PiTranslator.c,148 :: 		BSF          PIE1, RCIE                                             // USART Receive Interrupt Enable bit.
0x0051	0x1691      	BSF        PIE1, 5
;FirePIC_PiTranslator.c,149 :: 		CLRF         INTCON                                                 // Reset any previous settings.
0x0052	0x018B      	CLRF       INTCON
;FirePIC_PiTranslator.c,150 :: 		BSF          INTCON, PEIE                                           // Enable Periphieral Interrupts (For Rx Interrupts).
0x0053	0x170B      	BSF        INTCON, 6
;FirePIC_PiTranslator.c,151 :: 		BSF          INTCON, GIE                                            // Enable Global Interrupts (For Rx Interrupts).
0x0054	0x178B      	BSF        INTCON, 7
;FirePIC_PiTranslator.c,153 :: 		while(1){}
L_main4:
0x0055	0x2855      	GOTO       L_main4
;FirePIC_PiTranslator.c,154 :: 		}
L_end_main:
0x0056	0x2856      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [35]    _interrupt
0x0027       [9]    ___CC2DW
0x0030      [39]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PORTA
0x0011       [1]    PIR1
0x0020       [1]    _receivedByte
0x0021       [1]    _counter
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008C       [1]    TRISA
0x0091       [1]    PIE1
0x0099       [1]    OSCCON
0x011D       [1]    APFCON
0x018C       [1]    ANSELA
0x0199       [1]    RCREG
0x019A       [1]    TXREG
0x019B       [1]    SPBRGL
0x019C       [1]    SPBRGH
0x019D       [1]    RCSTA
0x019E       [1]    TXSTA
0x019F       [1]    BAUDCON
